project: SWG
lead_project: Open Source Security
label:
upstream: "Yes"
acceptance_criteria:
time_estimate: 3
issuetype: Epic
summary: PKCS#11 - Operation state support
epic_name: PKCS#11 - Operation state support
description:
        - |
          h1. Deliverables
          This Epic is about implementing the operation state functions in the session management API in PKCS#11. These functions adds support for setting and getting the cryptographic operation state of a session. The list of PKCS#11 functions that we intend to implement in this Epic are:
          * C_GetOperationState(), obtains the cryptographic operations state of a session
          * C_SetOperationState(), sets the cryptographic operations state of a session

          For most functions mentioned here, we need to write code in optee_os, optee_client and optee_test. I.e., these functions are called on the client side, but in most cases there is a 1:1 mapping to a function on secure side also (as a service in a Trusted Application).

          h1. Out of Scope
          N/A

          h1. Risks and Assumptions
          Assumptions: possible to implement this as a standalone component.

          h1. Acceptance Criteria
          |
          ||Criteria||Status||Closeout Notes/Links||
          |Patches upstream implementing PKCS#11 operation state support in OP-TEE (Armv7-A and Armv8-A)|(x)|Patches can be found [here (FIXME update link) |https://github.com/XYZ]|
          |Patches upstream enabling tests for the PKCS#11 operation state object support |(x)|Patches can be found [here (FIXME update link) |https://github.com/XYZ]|

          Legend:
          ||(/) Done, (x) Not Done, (!) Doesn't apply (note the reason)||
