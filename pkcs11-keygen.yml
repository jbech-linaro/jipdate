project: SWG
lead_project: Open Source Security
label:
upstream: "Yes"
acceptance_criteria:
time_estimate: 6
issuetype: Epic
summary: PKCS#11 - Key management functions
epic_name: PKCS#11 - Key management functions
description:
        - |
          h1. Deliverables
          This Epic is about implementing the key management functions in OP-TEE as described in the PKCS#11 API. The list of PKCS#11 functions that we intend to implement in this Epic are:
          * C_GenerateKeyPair, generates a public-key/private-key pair
          * C_WrapKey, wraps (encrypts) a key
          * C_UnwrapKey, unwraps (decrypts) a key
          * C_DeriveKey, derives a key from a base key

          Since this is about writing the boilerplate code for the functions we will just use these mechanisms when writing this Epic.
          * [CKM_AES_KEY_GEN|http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/csprd02/pkcs11-curr-v2.40-csprd02.html#_Toc387327804], generically used.
          * Wrapping: [CKM_AES_ECB|http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cs01/pkcs11-curr-v2.40-cs01.html#_Toc399398920] and [CKM_AES_CBC|http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cs01/pkcs11-curr-v2.40-cs01.html#_Toc399398921].
          * Derivation: [CKM_AES_ECB|http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cs01/pkcs11-curr-v2.40-cs01.html#_Toc399398920] (CKM_AES_ECB_ENCRYPT_DATA) and [CKM_AES_CBC|http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cs01/pkcs11-curr-v2.40-cs01.html#_Toc399398921] (CKM_AES_CBC_ENCRYPT_DATA).

          For other mechanisms, please see the comment in the "Out of Scope" section further down.

          This card depends on [SWG-XYZ] (PKCS#11 - Basic secure object support).

          For most functions mentioned here, we need to write code in optee_os, optee_client and optee_test. I.e., these functions are called on the client side, but in most cases there is a 1:1 mapping to a function on secure side also (as a service in a Trusted Application).

          h1. Out of Scope
          * C_GenerateKey, generates a secret key, done in [SWG-XYZ] (PKCS#11 - Basic secure object support).

          This is about adding the boilerplate code for the key generation functions. Note that there are several mechanisms that can be provided as parameters. I.e., depending on the parameter you can generate different keys to be used with various algorithms. This card is not about adding support for all these mechanisms. Support for that will be done in separate Epics.

          h1. Risks and Assumptions
          Assumptions: possible to implement this as a standalone component.

          h1. Acceptance Criteria
          |
          ||Criteria||Status||Closeout Notes/Links||
          |Patches upstream implementing PKCS#11 key management function in OP-TEE (Armv7-A and Armv8-A)|(x)|Patches can be found [here (FIXME update link) |https://github.com/XYZ]|
          |Patches upstream enabling tests for the PKCS#11 key management functions |(x)|Patches can be found [here (FIXME update link) |https://github.com/XYZ]|
          | C_GenerateKey implemented/upstream |(x)| |
          | C_GenerateKeyPair implemented/upstream |(x)| |
          | C_WrapKey implemented/upstream |(x)| |
          | C_UnwrapKey implemented/upstream |(x)| |
          | C_DeriveKey implemented/upstream |(x)| |

          Legend:
          ||(/) Done, (x) Not Done, (!) Doesn't apply (note the reason)||
